CREATE DATABASE SQLEX4;

SHOW DATABASES;

USE SQLEX4;

create table players (
player_id integer not null unique, 
group_id integer not null
);
create table matches (
match_id integer not null unique, 
first_player integer not null, 
second_player integer not null, 
first_score integer not null, 
second_score integer not null
);

INSERT INTO PLAYERS VALUES (20, 2);
INSERT INTO PLAYERS VALUES (30, 1);
INSERT INTO PLAYERS VALUES (40, 3);
INSERT INTO PLAYERS VALUES (45, 1);
INSERT INTO PLAYERS VALUES (50, 2);
INSERT INTO PLAYERS VALUES (65, 1);

INSERT INTO MATCHES VALUES (1, 30, 45, 10, 12);
INSERT INTO MATCHES VALUES (2, 20, 50, 5, 5);
INSERT INTO MATCHES VALUES (13, 65, 45, 10, 10);
INSERT INTO MATCHES VALUES (5, 30, 65, 3, 15);
INSERT INTO MATCHES VALUES (42, 45, 65, 8, 4);



WITH RESULT AS (
SELECT P.PLAYER_ID , SUM((FIRST_SCORE + SECOND_SCORE)) AS EACH_SCORE
FROM PLAYERS P LEFT JOIN MATCHES M ON P.PLAYER_ID = M.FIRST_PLAYER OR P.PLAYER_ID = M.SECOND_PLAYER
GROUP BY P.PLAYER_ID
)
SELECT P.GROUP_ID, P.PLAYER_ID AS WINNER_ID
FROM PLAYERS P
JOIN RESULT R ON P.PLAYER_ID = R.PLAYER_ID
GROUP BY P.GROUP_ID;

-- SELECT GROUP_ID, 

WITH CS AS(
WITH DS AS(
WITH FS AS (
SELECT P.PLAYER_ID, IFNULL(SUM(FS.EACH_SCORE), 0) AS SUM_SCORE
FROM PLAYERS P
LEFT JOIN (
    SELECT M.FIRST_PLAYER AS PLAYER_ID, SUM(M.FIRST_SCORE) AS EACH_SCORE
    FROM MATCHES M
    GROUP BY M.FIRST_PLAYER
    UNION ALL
    SELECT M.SECOND_PLAYER AS PLAYER_ID, SUM(M.SECOND_SCORE) AS EACH_SCORE
    FROM MATCHES M
    GROUP BY M.SECOND_PLAYER
) AS FS ON P.PLAYER_ID = FS.PLAYER_ID
GROUP BY P.PLAYER_ID
ORDER BY TOTAL_SCORE DESC
)
SELECT P.GROUP_ID, P.PLAYER_ID, MAX(FS.SUM_SCORE) AS TOTAL_SCORE
FROM PLAYERS P
JOIN FS ON P.PLAYER_ID = FS.PLAYER_ID
GROUP BY P.PLAYER_ID 
ORDER BY TOTAL_SCORE DESC
)
SELECT ROW_NUMBER() OVER (PARTITION BY DS.GROUP_ID ) AS ROW_ID, DS.GROUP_ID, DS.PLAYER_ID , DS.TOTAL_SCORE
FROM DS
 )
SELECT CS.GROUP_ID,CS.PLAYER_ID AS WINNER_ID
FROM CS 
WHERE CS.ROW_ID = 1;


