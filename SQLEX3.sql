CREATE DATABASE SQLEX3;

SHOW DATABASES;

USE SQLEX3;

CREATE TABLE CUSTOMER(
id INTEGER PRIMARY KEY,
customer_name varchar(255) NOT NULL,
city_id INTEGER NOT NULL, 
customer_address varchar(255) NOT NULL,
contact_person varchar(255),
email varchar(128) NOT NULL,
phone varchar(128) NOT NULL
);

CREATE TABLE PRODUCT(
id INTEGER PRIMARY KEY,
sku varchar(32),
product_name varchar(128),
product_description text,
current_price decimal(8,2),
quantity_in_stock INTEGER
);

CREATE TABLE INVOICE(
id INTEGER PRIMARY KEY,
invoice_number varchar(255) NOT NULL,
customer_id INTEGER, 
user_account_id INTEGER NOT NULL,
total_price decimal(8,2) NOT NULL,
time_issued varchar(255),
time_due varchar(255),
time_paid varchar(255),
time_canceled varchar(255),
time_refunded varchar(255),
foreign key (CUSTOMER_ID) REFERENCES CUSTOMER(ID)
);

CREATE TABLE INVOICE_ITEM(
id INTEGER PRIMARY KEY,
invoice_id INTEGER,
product_id INTEGER,
quantity INTEGER,
price decimal(8,2),
line_total_price decimal(8,2),
FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID)
);

DELETE FROM CUSTOMER;
SELECT * FROM CUSTOMER;

INSERT INTO CUSTOMER VALUES
(1, 'Drogerie Wien', 1, 'Deckergasse 15A', 'Emil Steinbach', 'abc@gmail.com', 123455678);
INSERT INTO CUSTOMER VALUES
(2, 'John', 4, 'Deckergasse lA', 'upper', 'abck@gmail.com', 12345567);
INSERT INTO CUSTOMER VALUES
(3, 'Mary', 8, 'Deckergasse 18A', '9upper', 'abcd@gmail.com', 1234556789);

DELETE FROM PRODUCT;
SELECT * FROM PRODUCT;
INSERT INTO PRODUCT VALUES
(1, '330120', '9UP PRODUCT', 'COMPLETELY 9UP', 60, 122);
INSERT INTO PRODUCT VALUES
(2, '330121', '9UPPER PRODUCT', 'COMPLETELY 9UPPER', 50, 50);
INSERT INTO PRODUCT VALUES
(3, '330122', '9UPPER PRODUCTS', 'SUPER 9UPPER', 40, 600);
INSERT INTO PRODUCT VALUES
(4, '330123', '9UPPER PRODUCTSS', 'SUPER COMPLETELY UPPER', 30, 500);

DELETE FROM INVOICE;
SELECT * FROM INVOICE;
INSERT INTO INVOICE VALUES
(1, 123456780, 2, 41, 1423, NULL, NULL, NULL, NULL, NULL);
INSERT INTO INVOICE VALUES
(2, 123456780, 3, 42, 1400, NULL, NULL, NULL, NULL, NULL);
INSERT INTO INVOICE VALUES
(3, 123456780, 2, 43, 17000, NULL, NULL, NULL, NULL, NULL);

DELETE FROM INVOICE_ITEM;
INSERT INTO INVOICE_ITEM VALUES
(1, 1, 1, 40, 23, 920);
INSERT INTO INVOICE_ITEM VALUES
(2, 1, 2, 4, 20, 80);
INSERT INTO INVOICE_ITEM VALUES
(3, 1, 3, 4, 10, 40);
INSERT INTO INVOICE_ITEM VALUES
(4, 1, 2, 4, 30, 120);

SELECT 'CUSTOMER' AS ITEM_TYPE, C.ID AS ITEM_ID, C.CUSTOMER_NAME 
FROM CUSTOMER C
WHERE C.ID NOT IN (SELECT DISTINCT CUSTOMER_ID FROM INVOICE) 
UNION 
SELECT 'PRODUCT' AS PRODUCT_TYPE, P.ID AS ITEM_ID, P.PRODUCT_NAME
FROM PRODUCT P
WHERE P.ID NOT IN (SELECT DISTINCT PRODUCT_ID FROM INVOICE_ITEM); 

-- Table Structure
-- DROP TABLE EMPLOYEE;
CREATE TABLE EMPLOYEE (
ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY, EMPLOYEE_NAME VARCHAR(30) NOT NULL, SALARY NUMERIC(8,2), PHONE NUMERIC (15), EMAIL VARCHAR (50),
DEPT_ID INTEGER NOT NULL
) ;
-- DROP TABLE DEPARTMENT;
CREATE TABLE DEPARTMENT (
ID INTEGER NOT NULL AUTO_INCREMENT PRIMARY KEY, DEPT_CODE VARCHAR(3) NOT NULL, DEPT_NAME VARCHAR(200) NOT NULL
) ;

SELECT D.DEPT_CODE AS 'DEPARTMENT CODE', COUNT(E.ID) AS 'NUMBER OF EMPLOYEES'
FROM  DEPARTMENT D LEFT JOIN EMPLOYEE E ON D.ID = E.DEPT_ID
GROUP BY D.DEPT_CODE 
ORDER BY COUNT(E.ID) DESC, D.DEPT_CODE ASC;

DELETE FROM EMPLOYEE;
INSERT INTO EMPLOYEE VALUES (1, 'JOHN', 20000, 90234567, 'JOHN@GMAIL.COM', 1);
INSERT INTO EMPLOYEE VALUES (2, 'MARY', 10000, 90234561, 'MARY@GMAIL.COM', 1);
INSERT INTO EMPLOYEE VALUES (3, 'STEVE', 30000, 90234562, 'STEVE@GMAIL.COM', 3) ;
INSERT INTO EMPLOYEE VALUES (4, 'SUNNY', 40000, 90234563, 'SUNNY@GMAIL.COM', 4) ;

DELETE FROM DEPARTMENT;
INSERT INTO DEPARTMENT VALUES (1, 'HR', 'HUMAN RESOURCES');
INSERT INTO DEPARTMENT VALUES (2, '9UP', '9UP DEPARTMENT');
INSERT INTO DEPARTMENT VALUES (3, 'SA', 'SALES DEPARTMENT');
INSERT INTO DEPARTMENT VALUES (4, 'IT', 'INFORMATION TECHNOLOGY DEPARTMENT');

DELETE FROM DEPARTMENT WHERE ID = 5;
INSERT INTO DEPARTMENT VALUES (5, 'IT', 'INFORMATION TECHNOLOGY DEPARTMENT');



